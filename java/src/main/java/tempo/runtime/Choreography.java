// Code generated by tempo, DO NOT EDIT.
package tempo.runtime;

import tempo.runtime.Env;

public final class Choreography {
  private Choreography() {
  }

  // Projection of interface `Exchange`
  public interface Exchange_A {
    public Pair_B exchange(Env env) throws Exception;
  }

  public interface Exchange_B {
    public Pair_A exchange(Env env) throws Exception;
  }

  // Projection of struct `Pair`
  public static final class Pair_A implements Cloneable, Exchange_A {
    public Integer x;

    public Pair_A(Integer x) {
      this.x = x;
    }

    public Pair_B exchange(Env env) throws Exception {
      env.send(this.x, "B").get();
      return new Pair_B(env.<String>recv("B").get());
    }

    public Pair_A clone() {
      return new Pair_A(x);
    }
  }

  public static final class Pair_B implements Cloneable, Exchange_B {
    public String y;

    public Pair_B(String y) {
      this.y = y;
    }

    public Pair_A exchange(Env env) throws Exception {
      env.send(this.y, "A").get();
      return new Pair_A(env.<Integer>recv("A").get());
    }

    public Pair_B clone() {
      return new Pair_B(y);
    }
  }

  // Projection of choreography `main`
  public static Pair_B main_A(Env env) throws Exception {
    Integer number = 10;
    Exchange_A pair = new Pair_A(number);
    return pair.exchange(env);
  }

  public static Pair_A main_B(Env env) throws Exception {
    String text = "hello";
    Exchange_B pair = new Pair_B(text);
    return pair.exchange(env);
  }
}
