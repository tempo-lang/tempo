// Code generated by tempo, DO NOT EDIT.
package choreography

import runtime "github.com/tempo-lang/tempo/runtime"

// Projection of struct `Pair`
type Pair_A struct {
	x int `json:"x"`
}
type Pair_B struct {
	y int `json:"y"`
}

// Projection of struct `Foo`
type Foo_A struct {
	pairs []Pair_A `json:"pairs"`
}
type Foo_B struct {
	pairs []Pair_B `json:"pairs"`
}
type Foo_C struct {
	z int `json:"z"`
}

// Projection of choreography `main`
func main_X(env *runtime.Env) {
	var foo Foo_A = Foo_A{pairs: []Pair_A{}}
	_ = foo
	foo.pairs = []Pair_A{Pair_A{x: 1}, Pair_A{x: 3}}
	foo.pairs[runtime.GetAsync(runtime.Recv[int](env, "Z"))].x = 10
}
func main_Y(env *runtime.Env) {
	var foo Foo_B = Foo_B{pairs: []Pair_B{}}
	_ = foo
	foo.pairs = []Pair_B{Pair_B{y: 2}, Pair_B{y: 4}}
}
func main_Z(env *runtime.Env) {
	var foo Foo_C = Foo_C{z: 1}
	_ = foo
	runtime.Send(env, foo.z, "X")
}
