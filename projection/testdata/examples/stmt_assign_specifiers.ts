// Code generated by tempo, DO NOT EDIT.

import { Env } from '../../../typescript/runtime.ts';

// Projection of struct Pair
export type Pair_A = {
  x: number;
}
export type Pair_B = {
  y: number;
}

// Projection of struct Foo
export type Foo_A = {
  pairs: Pair_A[];
}
export type Foo_B = {
  pairs: Pair_B[];
}
export type Foo_C = {
  z: number;
}

// Projection of choreography main
export async function main_X(env: Env) {
  let foo: Foo_A = { pairs: [] };
  foo.pairs = [{ x: 1 }, { x: 3 }];
  foo.pairs[await env.recv<number>("Z")].x = 10;
}
export async function main_Y(env: Env) {
  let foo: Foo_B = { pairs: [] };
  foo.pairs = [{ y: 2 }, { y: 4 }];
}
export async function main_Z(env: Env) {
  let foo: Foo_C = { z: 1 };
  env.send(foo.z, "X");
}

