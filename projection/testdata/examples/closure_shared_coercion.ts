// Code generated by tempo, DO NOT EDIT.

import { Env } from '../../../typescript/runtime.ts';

// Projection of choreography `double`
export async function double_A(env: Env, val: number): Promise<number> {
  return val * 2;
}

// Projection of choreography `main`
export async function main_A(env: Env) {
  let a: (env: Env, arg0: number) => Promise<number> = async (env: Env, val: number): Promise<number> => {
    return await double_A(env, val);
  };
  let b: (env: Env, arg0: number) => Promise<number> = env.copy(a);
}
export async function main_B(env: Env) {
  let a: (env: Env, arg0: number) => Promise<number> = async (env: Env, val: number): Promise<number> => {
    return await double_A(env.subst("B", "A"), val);
  };
  let b: (env: Env, arg0: number) => Promise<number> = env.copy(a);
  let x: (env: Env, arg0: number) => Promise<number> = env.copy(a);
  let y: (env: Env, arg0: number) => Promise<number> = async (env: Env, val: number): Promise<number> => {
    return await double_A(env.subst("B", "A"), val);
  };
}

