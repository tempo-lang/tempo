// Code generated by tempo, DO NOT EDIT.
package choreography

import runtime "github.com/tempo-lang/tempo/runtime"

// Projection of interface `Printer`
type Printer interface {
	print(env *runtime.Env) string
}

// Projection of struct `Point`
type Point struct {
	x int `json:"x"`
	y int `json:"y"`
}

// Implementation of struct `Point`
func (self Point) print(env *runtime.Env) string {
	return "Point"
}

// Projection of choreography `foo`
func foo(env *runtime.Env) int {
	var x int = 10
	_ = x
	var y []int = []int{1, 2, 3}
	_ = y
	var p Point = runtime.Copy(Point{
		x: x,
		y: y[0],
	})
	_ = p
	var str string = p.print(env)
	_ = str
	return x
}

// Projection of choreography `main`
func main_A(env *runtime.Env) {
	var x int = foo(env.Subst("A", ""))
	_ = x
}
func main_B(env *runtime.Env) {
	var x int = foo(env.Subst("B", ""))
	_ = x
}
