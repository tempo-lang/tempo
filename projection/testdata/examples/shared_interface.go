// Code generated by tempo, DO NOT EDIT.
package choreography

import runtime "github.com/tempo-lang/tempo/runtime"

// Projection of interface `Func`
type Func_A interface {
	call(env *runtime.Env, input int) int
}

// Projection of struct `Mult`
type Mult_A struct {
	x int `json:"x"`
}

// Implementation of struct `Mult`
func (self Mult_A) call(env *runtime.Env, input int) int {
	return input * self.x
}

// Projection of choreography `main`
func main_A(env *runtime.Env) {
	var f Mult_A = Mult_A{x: 4}
	_ = f
	var g Func_A = runtime.GetAsync(runtime.Send(env, f, "B"))
	_ = g
	var x int = g.call(env, 10)
	_ = x
}
func main_B(env *runtime.Env) {
	var g Func_A = runtime.GetAsync(runtime.Recv[Mult_A](env, "A"))
	_ = g
	var x int = g.call(env.Subst("B", "A"), 10)
	_ = x
}
