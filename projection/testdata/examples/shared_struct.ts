// Code generated by tempo, DO NOT EDIT.

import { Env } from '../../../typescript/runtime.ts';

// Projection of struct `Foo`
export interface Foo_A_attrs {
  x: number;
  y: number;
}
export class Foo_A implements Foo_A_attrs {
  x: number;
  y: number;
  
  constructor({ x, y }: Foo_A_attrs) {
    this.x = x;
    this.y = y;
  }
}


// Projection of choreography `main`
export async function main_A(env: Env) {
  let foo: Foo_A = new Foo_A({ x: 10, y: 20 });
  let fooShared: Foo_A = await env.send(foo, "B");
  let x: number = fooShared.x;
}
export async function main_B(env: Env) {
  let fooShared: Foo_A = await env.recvClass<Foo_A, Foo_A_attrs>("A", Foo_A);
  let x: number = fooShared.x;
}

