// Code generated by tempo, DO NOT EDIT.
package choreography

import runtime "github.com/tempo-lang/tempo/runtime"

// Projection of interface `Reader`
type Reader_A interface {
	read(env *runtime.Env) int
}

// Projection of interface `Writer`
type Writer_A interface {
	write(env *runtime.Env, out int)
}

// Projection of struct `Buffer`
type Buffer_X struct {
	buf int `json:"buf"`
}

// Implementation of struct `Buffer`
func (self Buffer_X) read(env *runtime.Env) int {
	return self.buf
}
func (self Buffer_X) write(env *runtime.Env, out int) {
	self.buf = out
}

// Projection of choreography `main`
func main_A(env *runtime.Env) {
	var buffer Buffer_X = Buffer_X{buf: 10}
	_ = buffer
	var reader Reader_A = runtime.Copy(buffer)
	_ = reader
	var writer Writer_A = runtime.Copy(buffer)
	_ = writer
	writer.write(env, 10)
	_ = reader.read(env)
}
func main_B(env *runtime.Env) {}
