// Code generated from Tempo.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type TempoLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var TempoLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func tempolexerLexerInit() {
	staticData := &TempoLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'struct'", "'interface'", "'implements'", "'func'", "'return'",
		"'let'", "'async'", "'await'", "'if'", "'else'", "'while'", "'true'",
		"'false'", "'('", "'['", "'{'", "')'", "']'", "'}'", "'+'", "'-'", "'*'",
		"'/'", "'%'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'&&'",
		"'||'", "'='", "'@'", "','", "'.'", "':'", "'->'", "", "", "", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "STRUCT", "INTERFACE", "IMPLEMENTS", "FUNC", "RETURN", "LET", "ASYNC",
		"AWAIT", "IF", "ELSE", "WHILE", "TRUE", "FALSE", "LPAREN", "LSQUARE",
		"LCURLY", "RPAREN", "RSQUARE", "RCURLY", "PLUS", "MINUS", "MULTIPLY",
		"DIVIDE", "MODULO", "EQUAL", "NOT_EQUAL", "LESS", "LESS_EQ", "GREATER",
		"GREATER_EQ", "AND", "OR", "IS", "ROLE_AT", "COMMA", "DOT", "COLON",
		"COM", "STRING", "ID", "NUMBER", "END", "WHITESPACE", "LINE_COMMENT",
		"BLOCK_COMMENT",
	}
	staticData.RuleNames = []string{
		"STRUCT", "INTERFACE", "IMPLEMENTS", "FUNC", "RETURN", "LET", "ASYNC",
		"AWAIT", "IF", "ELSE", "WHILE", "TRUE", "FALSE", "LPAREN", "LSQUARE",
		"LCURLY", "RPAREN", "RSQUARE", "RCURLY", "PLUS", "MINUS", "MULTIPLY",
		"DIVIDE", "MODULO", "EQUAL", "NOT_EQUAL", "LESS", "LESS_EQ", "GREATER",
		"GREATER_EQ", "AND", "OR", "IS", "ROLE_AT", "COMMA", "DOT", "COLON",
		"COM", "STRING", "ESC", "SAFECODEPOINT", "ID", "NUMBER", "END", "WHITESPACE",
		"LINE_COMMENT", "BLOCK_COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 45, 302, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1,
		31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 5, 38, 237, 8, 38, 10,
		38, 12, 38, 240, 9, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40,
		1, 41, 1, 41, 4, 41, 251, 8, 41, 11, 41, 12, 41, 252, 1, 41, 1, 41, 5,
		41, 257, 8, 41, 10, 41, 12, 41, 260, 9, 41, 3, 41, 262, 8, 41, 1, 42, 4,
		42, 265, 8, 42, 11, 42, 12, 42, 266, 1, 43, 1, 43, 1, 44, 4, 44, 272, 8,
		44, 11, 44, 12, 44, 273, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 5, 45,
		282, 8, 45, 10, 45, 12, 45, 285, 9, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1,
		46, 1, 46, 5, 46, 293, 8, 46, 10, 46, 12, 46, 296, 9, 46, 1, 46, 1, 46,
		1, 46, 1, 46, 1, 46, 1, 294, 0, 47, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 0, 81, 0, 83, 40, 85, 41,
		87, 42, 89, 43, 91, 44, 93, 45, 1, 0, 7, 5, 0, 34, 34, 92, 92, 110, 110,
		114, 114, 116, 116, 3, 0, 0, 31, 34, 34, 92, 92, 4, 0, 48, 57, 65, 90,
		95, 95, 97, 122, 2, 0, 65, 90, 97, 122, 1, 0, 48, 57, 3, 0, 9, 10, 13,
		13, 32, 32, 2, 0, 10, 10, 13, 13, 308, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
		0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35,
		1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0,
		43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0,
		0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0,
		0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0,
		0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1,
		0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85,
		1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0,
		93, 1, 0, 0, 0, 1, 95, 1, 0, 0, 0, 3, 102, 1, 0, 0, 0, 5, 112, 1, 0, 0,
		0, 7, 123, 1, 0, 0, 0, 9, 128, 1, 0, 0, 0, 11, 135, 1, 0, 0, 0, 13, 139,
		1, 0, 0, 0, 15, 145, 1, 0, 0, 0, 17, 151, 1, 0, 0, 0, 19, 154, 1, 0, 0,
		0, 21, 159, 1, 0, 0, 0, 23, 165, 1, 0, 0, 0, 25, 170, 1, 0, 0, 0, 27, 176,
		1, 0, 0, 0, 29, 178, 1, 0, 0, 0, 31, 180, 1, 0, 0, 0, 33, 182, 1, 0, 0,
		0, 35, 184, 1, 0, 0, 0, 37, 186, 1, 0, 0, 0, 39, 188, 1, 0, 0, 0, 41, 190,
		1, 0, 0, 0, 43, 192, 1, 0, 0, 0, 45, 194, 1, 0, 0, 0, 47, 196, 1, 0, 0,
		0, 49, 198, 1, 0, 0, 0, 51, 201, 1, 0, 0, 0, 53, 204, 1, 0, 0, 0, 55, 206,
		1, 0, 0, 0, 57, 209, 1, 0, 0, 0, 59, 211, 1, 0, 0, 0, 61, 214, 1, 0, 0,
		0, 63, 217, 1, 0, 0, 0, 65, 220, 1, 0, 0, 0, 67, 222, 1, 0, 0, 0, 69, 224,
		1, 0, 0, 0, 71, 226, 1, 0, 0, 0, 73, 228, 1, 0, 0, 0, 75, 230, 1, 0, 0,
		0, 77, 233, 1, 0, 0, 0, 79, 243, 1, 0, 0, 0, 81, 246, 1, 0, 0, 0, 83, 261,
		1, 0, 0, 0, 85, 264, 1, 0, 0, 0, 87, 268, 1, 0, 0, 0, 89, 271, 1, 0, 0,
		0, 91, 277, 1, 0, 0, 0, 93, 288, 1, 0, 0, 0, 95, 96, 5, 115, 0, 0, 96,
		97, 5, 116, 0, 0, 97, 98, 5, 114, 0, 0, 98, 99, 5, 117, 0, 0, 99, 100,
		5, 99, 0, 0, 100, 101, 5, 116, 0, 0, 101, 2, 1, 0, 0, 0, 102, 103, 5, 105,
		0, 0, 103, 104, 5, 110, 0, 0, 104, 105, 5, 116, 0, 0, 105, 106, 5, 101,
		0, 0, 106, 107, 5, 114, 0, 0, 107, 108, 5, 102, 0, 0, 108, 109, 5, 97,
		0, 0, 109, 110, 5, 99, 0, 0, 110, 111, 5, 101, 0, 0, 111, 4, 1, 0, 0, 0,
		112, 113, 5, 105, 0, 0, 113, 114, 5, 109, 0, 0, 114, 115, 5, 112, 0, 0,
		115, 116, 5, 108, 0, 0, 116, 117, 5, 101, 0, 0, 117, 118, 5, 109, 0, 0,
		118, 119, 5, 101, 0, 0, 119, 120, 5, 110, 0, 0, 120, 121, 5, 116, 0, 0,
		121, 122, 5, 115, 0, 0, 122, 6, 1, 0, 0, 0, 123, 124, 5, 102, 0, 0, 124,
		125, 5, 117, 0, 0, 125, 126, 5, 110, 0, 0, 126, 127, 5, 99, 0, 0, 127,
		8, 1, 0, 0, 0, 128, 129, 5, 114, 0, 0, 129, 130, 5, 101, 0, 0, 130, 131,
		5, 116, 0, 0, 131, 132, 5, 117, 0, 0, 132, 133, 5, 114, 0, 0, 133, 134,
		5, 110, 0, 0, 134, 10, 1, 0, 0, 0, 135, 136, 5, 108, 0, 0, 136, 137, 5,
		101, 0, 0, 137, 138, 5, 116, 0, 0, 138, 12, 1, 0, 0, 0, 139, 140, 5, 97,
		0, 0, 140, 141, 5, 115, 0, 0, 141, 142, 5, 121, 0, 0, 142, 143, 5, 110,
		0, 0, 143, 144, 5, 99, 0, 0, 144, 14, 1, 0, 0, 0, 145, 146, 5, 97, 0, 0,
		146, 147, 5, 119, 0, 0, 147, 148, 5, 97, 0, 0, 148, 149, 5, 105, 0, 0,
		149, 150, 5, 116, 0, 0, 150, 16, 1, 0, 0, 0, 151, 152, 5, 105, 0, 0, 152,
		153, 5, 102, 0, 0, 153, 18, 1, 0, 0, 0, 154, 155, 5, 101, 0, 0, 155, 156,
		5, 108, 0, 0, 156, 157, 5, 115, 0, 0, 157, 158, 5, 101, 0, 0, 158, 20,
		1, 0, 0, 0, 159, 160, 5, 119, 0, 0, 160, 161, 5, 104, 0, 0, 161, 162, 5,
		105, 0, 0, 162, 163, 5, 108, 0, 0, 163, 164, 5, 101, 0, 0, 164, 22, 1,
		0, 0, 0, 165, 166, 5, 116, 0, 0, 166, 167, 5, 114, 0, 0, 167, 168, 5, 117,
		0, 0, 168, 169, 5, 101, 0, 0, 169, 24, 1, 0, 0, 0, 170, 171, 5, 102, 0,
		0, 171, 172, 5, 97, 0, 0, 172, 173, 5, 108, 0, 0, 173, 174, 5, 115, 0,
		0, 174, 175, 5, 101, 0, 0, 175, 26, 1, 0, 0, 0, 176, 177, 5, 40, 0, 0,
		177, 28, 1, 0, 0, 0, 178, 179, 5, 91, 0, 0, 179, 30, 1, 0, 0, 0, 180, 181,
		5, 123, 0, 0, 181, 32, 1, 0, 0, 0, 182, 183, 5, 41, 0, 0, 183, 34, 1, 0,
		0, 0, 184, 185, 5, 93, 0, 0, 185, 36, 1, 0, 0, 0, 186, 187, 5, 125, 0,
		0, 187, 38, 1, 0, 0, 0, 188, 189, 5, 43, 0, 0, 189, 40, 1, 0, 0, 0, 190,
		191, 5, 45, 0, 0, 191, 42, 1, 0, 0, 0, 192, 193, 5, 42, 0, 0, 193, 44,
		1, 0, 0, 0, 194, 195, 5, 47, 0, 0, 195, 46, 1, 0, 0, 0, 196, 197, 5, 37,
		0, 0, 197, 48, 1, 0, 0, 0, 198, 199, 5, 61, 0, 0, 199, 200, 5, 61, 0, 0,
		200, 50, 1, 0, 0, 0, 201, 202, 5, 33, 0, 0, 202, 203, 5, 61, 0, 0, 203,
		52, 1, 0, 0, 0, 204, 205, 5, 60, 0, 0, 205, 54, 1, 0, 0, 0, 206, 207, 5,
		60, 0, 0, 207, 208, 5, 61, 0, 0, 208, 56, 1, 0, 0, 0, 209, 210, 5, 62,
		0, 0, 210, 58, 1, 0, 0, 0, 211, 212, 5, 62, 0, 0, 212, 213, 5, 61, 0, 0,
		213, 60, 1, 0, 0, 0, 214, 215, 5, 38, 0, 0, 215, 216, 5, 38, 0, 0, 216,
		62, 1, 0, 0, 0, 217, 218, 5, 124, 0, 0, 218, 219, 5, 124, 0, 0, 219, 64,
		1, 0, 0, 0, 220, 221, 5, 61, 0, 0, 221, 66, 1, 0, 0, 0, 222, 223, 5, 64,
		0, 0, 223, 68, 1, 0, 0, 0, 224, 225, 5, 44, 0, 0, 225, 70, 1, 0, 0, 0,
		226, 227, 5, 46, 0, 0, 227, 72, 1, 0, 0, 0, 228, 229, 5, 58, 0, 0, 229,
		74, 1, 0, 0, 0, 230, 231, 5, 45, 0, 0, 231, 232, 5, 62, 0, 0, 232, 76,
		1, 0, 0, 0, 233, 238, 5, 34, 0, 0, 234, 237, 3, 79, 39, 0, 235, 237, 3,
		81, 40, 0, 236, 234, 1, 0, 0, 0, 236, 235, 1, 0, 0, 0, 237, 240, 1, 0,
		0, 0, 238, 236, 1, 0, 0, 0, 238, 239, 1, 0, 0, 0, 239, 241, 1, 0, 0, 0,
		240, 238, 1, 0, 0, 0, 241, 242, 5, 34, 0, 0, 242, 78, 1, 0, 0, 0, 243,
		244, 5, 92, 0, 0, 244, 245, 7, 0, 0, 0, 245, 80, 1, 0, 0, 0, 246, 247,
		8, 1, 0, 0, 247, 82, 1, 0, 0, 0, 248, 250, 5, 95, 0, 0, 249, 251, 7, 2,
		0, 0, 250, 249, 1, 0, 0, 0, 251, 252, 1, 0, 0, 0, 252, 250, 1, 0, 0, 0,
		252, 253, 1, 0, 0, 0, 253, 262, 1, 0, 0, 0, 254, 258, 7, 3, 0, 0, 255,
		257, 7, 2, 0, 0, 256, 255, 1, 0, 0, 0, 257, 260, 1, 0, 0, 0, 258, 256,
		1, 0, 0, 0, 258, 259, 1, 0, 0, 0, 259, 262, 1, 0, 0, 0, 260, 258, 1, 0,
		0, 0, 261, 248, 1, 0, 0, 0, 261, 254, 1, 0, 0, 0, 262, 84, 1, 0, 0, 0,
		263, 265, 7, 4, 0, 0, 264, 263, 1, 0, 0, 0, 265, 266, 1, 0, 0, 0, 266,
		264, 1, 0, 0, 0, 266, 267, 1, 0, 0, 0, 267, 86, 1, 0, 0, 0, 268, 269, 5,
		59, 0, 0, 269, 88, 1, 0, 0, 0, 270, 272, 7, 5, 0, 0, 271, 270, 1, 0, 0,
		0, 272, 273, 1, 0, 0, 0, 273, 271, 1, 0, 0, 0, 273, 274, 1, 0, 0, 0, 274,
		275, 1, 0, 0, 0, 275, 276, 6, 44, 0, 0, 276, 90, 1, 0, 0, 0, 277, 278,
		5, 47, 0, 0, 278, 279, 5, 47, 0, 0, 279, 283, 1, 0, 0, 0, 280, 282, 8,
		6, 0, 0, 281, 280, 1, 0, 0, 0, 282, 285, 1, 0, 0, 0, 283, 281, 1, 0, 0,
		0, 283, 284, 1, 0, 0, 0, 284, 286, 1, 0, 0, 0, 285, 283, 1, 0, 0, 0, 286,
		287, 6, 45, 0, 0, 287, 92, 1, 0, 0, 0, 288, 289, 5, 47, 0, 0, 289, 290,
		5, 42, 0, 0, 290, 294, 1, 0, 0, 0, 291, 293, 9, 0, 0, 0, 292, 291, 1, 0,
		0, 0, 293, 296, 1, 0, 0, 0, 294, 295, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0,
		295, 297, 1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 297, 298, 5, 42, 0, 0, 298,
		299, 5, 47, 0, 0, 299, 300, 1, 0, 0, 0, 300, 301, 6, 46, 0, 0, 301, 94,
		1, 0, 0, 0, 10, 0, 236, 238, 252, 258, 261, 266, 273, 283, 294, 1, 6, 0,
		0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// TempoLexerInit initializes any static state used to implement TempoLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewTempoLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func TempoLexerInit() {
	staticData := &TempoLexerLexerStaticData
	staticData.once.Do(tempolexerLexerInit)
}

// NewTempoLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewTempoLexer(input antlr.CharStream) *TempoLexer {
	TempoLexerInit()
	l := new(TempoLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &TempoLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Tempo.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TempoLexer tokens.
const (
	TempoLexerSTRUCT        = 1
	TempoLexerINTERFACE     = 2
	TempoLexerIMPLEMENTS    = 3
	TempoLexerFUNC          = 4
	TempoLexerRETURN        = 5
	TempoLexerLET           = 6
	TempoLexerASYNC         = 7
	TempoLexerAWAIT         = 8
	TempoLexerIF            = 9
	TempoLexerELSE          = 10
	TempoLexerWHILE         = 11
	TempoLexerTRUE          = 12
	TempoLexerFALSE         = 13
	TempoLexerLPAREN        = 14
	TempoLexerLSQUARE       = 15
	TempoLexerLCURLY        = 16
	TempoLexerRPAREN        = 17
	TempoLexerRSQUARE       = 18
	TempoLexerRCURLY        = 19
	TempoLexerPLUS          = 20
	TempoLexerMINUS         = 21
	TempoLexerMULTIPLY      = 22
	TempoLexerDIVIDE        = 23
	TempoLexerMODULO        = 24
	TempoLexerEQUAL         = 25
	TempoLexerNOT_EQUAL     = 26
	TempoLexerLESS          = 27
	TempoLexerLESS_EQ       = 28
	TempoLexerGREATER       = 29
	TempoLexerGREATER_EQ    = 30
	TempoLexerAND           = 31
	TempoLexerOR            = 32
	TempoLexerIS            = 33
	TempoLexerROLE_AT       = 34
	TempoLexerCOMMA         = 35
	TempoLexerDOT           = 36
	TempoLexerCOLON         = 37
	TempoLexerCOM           = 38
	TempoLexerSTRING        = 39
	TempoLexerID            = 40
	TempoLexerNUMBER        = 41
	TempoLexerEND           = 42
	TempoLexerWHITESPACE    = 43
	TempoLexerLINE_COMMENT  = 44
	TempoLexerBLOCK_COMMENT = 45
)
