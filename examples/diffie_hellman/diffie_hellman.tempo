interface Math {
  func Exp(base: Int, exp: Int) Int;
}

struct@(A,B) Secret {
  A: Int@A;
  B: Int@B;
}

func@(A,B) DiffieHellman(mathA: Math@A, mathB: Math@B) Secret@(A,B) {
  let p = 23;
  let g = 5;

  let a = 4@A;
  let b = 3@B;

  let A: async Int@B = A->B mathA.Exp(g, a) % p;
  let B: async Int@A = B->A mathB.Exp(g, b) % p;

  let sA = mathA.Exp(await B, a) % p;
  let sB = mathB.Exp(await A, b) % p;

  return Secret@(A,B) {
    A: sA, B: sB
  };
}
